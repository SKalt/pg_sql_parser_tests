[
  {
    "Name": "CREATE",
    "Start": 0,
    "End": 6,
    "Text": "CREATE"
  },
  {
    "Name": "FUNCTION",
    "Start": 7,
    "End": 15,
    "Text": "FUNCTION"
  },
  {
    "Name": "IDENT",
    "Start": 16,
    "End": 30,
    "Text": "refresh_mviews"
  },
  {
    "Name": "ASCII_40",
    "Start": 30,
    "End": 31,
    "Text": "("
  },
  {
    "Name": "ASCII_41",
    "Start": 31,
    "End": 32,
    "Text": ")"
  },
  {
    "Name": "RETURNS",
    "Start": 33,
    "End": 40,
    "Text": "RETURNS"
  },
  {
    "Name": "INTEGER",
    "Start": 41,
    "End": 48,
    "Text": "integer"
  },
  {
    "Name": "AS",
    "Start": 49,
    "End": 51,
    "Text": "AS"
  },
  {
    "Name": "SCONST",
    "Start": 52,
    "End": 951,
    "Text": "$$\nDECLARE\n    mviews RECORD;\nBEGIN\n    RAISE NOTICE 'Refreshing all materialized views...';\n\n    FOR mviews IN\n       SELECT n.nspname AS mv_schema,\n              c.relname AS mv_name,\n              pg_catalog.pg_get_userbyid(c.relowner) AS owner\n         FROM pg_catalog.pg_class c\n    LEFT JOIN pg_catalog.pg_namespace n ON (n.oid = c.relnamespace)\n        WHERE c.relkind = 'm'\n     ORDER BY 1\n    LOOP\n\n        -- Now \"mviews\" has one record with information about the materialized view\n\n        RAISE NOTICE 'Refreshing materialized view %.% (owner: %)...',\n                     quote_ident(mviews.mv_schema),\n                     quote_ident(mviews.mv_name),\n                     quote_ident(mviews.owner);\n        EXECUTE format('REFRESH MATERIALIZED VIEW %I.%I', mviews.mv_schema, mviews.mv_name);\n    END LOOP;\n\n    RAISE NOTICE 'Done refreshing materialized views.';\n    RETURN 1;\nEND;\n$$"
  },
  {
    "Name": "LANGUAGE",
    "Start": 952,
    "End": 960,
    "Text": "LANGUAGE"
  },
  {
    "Name": "IDENT",
    "Start": 961,
    "End": 968,
    "Text": "plpgsql"
  },
  {
    "Name": "ASCII_59",
    "Start": 968,
    "End": 969,
    "Text": ";"
  }
]