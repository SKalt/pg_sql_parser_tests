[
  {
    "Name": "SQL_COMMENT",
    "Start": 0,
    "End": 2,
    "Text": "--"
  },
  {
    "Name": "SQL_COMMENT",
    "Start": 3,
    "End": 53,
    "Text": "-- instr functions that mimic Oracle's counterpart"
  },
  {
    "Name": "SQL_COMMENT",
    "Start": 54,
    "End": 100,
    "Text": "-- Syntax: instr(string1, string2 [, n [, m]])"
  },
  {
    "Name": "SQL_COMMENT",
    "Start": 101,
    "End": 141,
    "Text": "-- where [] denotes optional parameters."
  },
  {
    "Name": "SQL_COMMENT",
    "Start": 142,
    "End": 144,
    "Text": "--"
  },
  {
    "Name": "SQL_COMMENT",
    "Start": 145,
    "End": 218,
    "Text": "-- Search string1, beginning at the nth character, for the mth occurrence"
  },
  {
    "Name": "SQL_COMMENT",
    "Start": 219,
    "End": 296,
    "Text": "-- of string2.  If n is negative, search backwards, starting at the abs(n)'th"
  },
  {
    "Name": "SQL_COMMENT",
    "Start": 297,
    "End": 334,
    "Text": "-- character from the end of string1."
  },
  {
    "Name": "SQL_COMMENT",
    "Start": 335,
    "End": 402,
    "Text": "-- If n is not passed, assume 1 (search starts at first character)."
  },
  {
    "Name": "SQL_COMMENT",
    "Start": 403,
    "End": 459,
    "Text": "-- If m is not passed, assume 1 (find first occurrence)."
  },
  {
    "Name": "SQL_COMMENT",
    "Start": 460,
    "End": 538,
    "Text": "-- Returns starting index of string2 in string1, or 0 if string2 is not found."
  },
  {
    "Name": "SQL_COMMENT",
    "Start": 539,
    "End": 541,
    "Text": "--"
  },
  {
    "Name": "CREATE",
    "Start": 543,
    "End": 549,
    "Text": "CREATE"
  },
  {
    "Name": "FUNCTION",
    "Start": 550,
    "End": 558,
    "Text": "FUNCTION"
  },
  {
    "Name": "IDENT",
    "Start": 559,
    "End": 564,
    "Text": "instr"
  },
  {
    "Name": "ASCII_40",
    "Start": 564,
    "End": 565,
    "Text": "("
  },
  {
    "Name": "VARCHAR",
    "Start": 565,
    "End": 572,
    "Text": "varchar"
  },
  {
    "Name": "ASCII_44",
    "Start": 572,
    "End": 573,
    "Text": ","
  },
  {
    "Name": "VARCHAR",
    "Start": 574,
    "End": 581,
    "Text": "varchar"
  },
  {
    "Name": "ASCII_41",
    "Start": 581,
    "End": 582,
    "Text": ")"
  },
  {
    "Name": "RETURNS",
    "Start": 583,
    "End": 590,
    "Text": "RETURNS"
  },
  {
    "Name": "INTEGER",
    "Start": 591,
    "End": 598,
    "Text": "integer"
  },
  {
    "Name": "AS",
    "Start": 599,
    "End": 601,
    "Text": "AS"
  },
  {
    "Name": "SCONST",
    "Start": 602,
    "End": 647,
    "Text": "$$\nBEGIN\n    RETURN instr($1, $2, 1);\nEND;\n$$"
  },
  {
    "Name": "LANGUAGE",
    "Start": 648,
    "End": 656,
    "Text": "LANGUAGE"
  },
  {
    "Name": "IDENT",
    "Start": 657,
    "End": 664,
    "Text": "plpgsql"
  },
  {
    "Name": "STRICT_P",
    "Start": 665,
    "End": 671,
    "Text": "STRICT"
  },
  {
    "Name": "IMMUTABLE",
    "Start": 672,
    "End": 681,
    "Text": "IMMUTABLE"
  },
  {
    "Name": "ASCII_59",
    "Start": 681,
    "End": 682,
    "Text": ";"
  },
  {
    "Name": "CREATE",
    "Start": 685,
    "End": 691,
    "Text": "CREATE"
  },
  {
    "Name": "FUNCTION",
    "Start": 692,
    "End": 700,
    "Text": "FUNCTION"
  },
  {
    "Name": "IDENT",
    "Start": 701,
    "End": 706,
    "Text": "instr"
  },
  {
    "Name": "ASCII_40",
    "Start": 706,
    "End": 707,
    "Text": "("
  },
  {
    "Name": "IDENT",
    "Start": 707,
    "End": 713,
    "Text": "string"
  },
  {
    "Name": "VARCHAR",
    "Start": 714,
    "End": 721,
    "Text": "varchar"
  },
  {
    "Name": "ASCII_44",
    "Start": 721,
    "End": 722,
    "Text": ","
  },
  {
    "Name": "IDENT",
    "Start": 723,
    "End": 743,
    "Text": "string_to_search_for"
  },
  {
    "Name": "VARCHAR",
    "Start": 744,
    "End": 751,
    "Text": "varchar"
  },
  {
    "Name": "ASCII_44",
    "Start": 751,
    "End": 752,
    "Text": ","
  },
  {
    "Name": "IDENT",
    "Start": 775,
    "End": 784,
    "Text": "beg_index"
  },
  {
    "Name": "INTEGER",
    "Start": 785,
    "End": 792,
    "Text": "integer"
  },
  {
    "Name": "ASCII_41",
    "Start": 792,
    "End": 793,
    "Text": ")"
  },
  {
    "Name": "RETURNS",
    "Start": 794,
    "End": 801,
    "Text": "RETURNS"
  },
  {
    "Name": "INTEGER",
    "Start": 802,
    "End": 809,
    "Text": "integer"
  },
  {
    "Name": "AS",
    "Start": 810,
    "End": 812,
    "Text": "AS"
  },
  {
    "Name": "SCONST",
    "Start": 813,
    "End": 1672,
    "Text": "$$\nDECLARE\n    pos integer NOT NULL DEFAULT 0;\n    temp_str varchar;\n    beg integer;\n    length integer;\n    ss_length integer;\nBEGIN\n    IF beg_index \u003e 0 THEN\n        temp_str := substring(string FROM beg_index);\n        pos := position(string_to_search_for IN temp_str);\n\n        IF pos = 0 THEN\n            RETURN 0;\n        ELSE\n            RETURN pos + beg_index - 1;\n        END IF;\n    ELSIF beg_index \u003c 0 THEN\n        ss_length := char_length(string_to_search_for);\n        length := char_length(string);\n        beg := length + 1 + beg_index;\n\n        WHILE beg \u003e 0 LOOP\n            temp_str := substring(string FROM beg FOR ss_length);\n            IF string_to_search_for = temp_str THEN\n                RETURN beg;\n            END IF;\n\n            beg := beg - 1;\n        END LOOP;\n\n        RETURN 0;\n    ELSE\n        RETURN 0;\n    END IF;\nEND;\n$$"
  },
  {
    "Name": "LANGUAGE",
    "Start": 1673,
    "End": 1681,
    "Text": "LANGUAGE"
  },
  {
    "Name": "IDENT",
    "Start": 1682,
    "End": 1689,
    "Text": "plpgsql"
  },
  {
    "Name": "STRICT_P",
    "Start": 1690,
    "End": 1696,
    "Text": "STRICT"
  },
  {
    "Name": "IMMUTABLE",
    "Start": 1697,
    "End": 1706,
    "Text": "IMMUTABLE"
  },
  {
    "Name": "ASCII_59",
    "Start": 1706,
    "End": 1707,
    "Text": ";"
  },
  {
    "Name": "CREATE",
    "Start": 1710,
    "End": 1716,
    "Text": "CREATE"
  },
  {
    "Name": "FUNCTION",
    "Start": 1717,
    "End": 1725,
    "Text": "FUNCTION"
  },
  {
    "Name": "IDENT",
    "Start": 1726,
    "End": 1731,
    "Text": "instr"
  },
  {
    "Name": "ASCII_40",
    "Start": 1731,
    "End": 1732,
    "Text": "("
  },
  {
    "Name": "IDENT",
    "Start": 1732,
    "End": 1738,
    "Text": "string"
  },
  {
    "Name": "VARCHAR",
    "Start": 1739,
    "End": 1746,
    "Text": "varchar"
  },
  {
    "Name": "ASCII_44",
    "Start": 1746,
    "End": 1747,
    "Text": ","
  },
  {
    "Name": "IDENT",
    "Start": 1748,
    "End": 1768,
    "Text": "string_to_search_for"
  },
  {
    "Name": "VARCHAR",
    "Start": 1769,
    "End": 1776,
    "Text": "varchar"
  },
  {
    "Name": "ASCII_44",
    "Start": 1776,
    "End": 1777,
    "Text": ","
  },
  {
    "Name": "IDENT",
    "Start": 1800,
    "End": 1809,
    "Text": "beg_index"
  },
  {
    "Name": "INTEGER",
    "Start": 1810,
    "End": 1817,
    "Text": "integer"
  },
  {
    "Name": "ASCII_44",
    "Start": 1817,
    "End": 1818,
    "Text": ","
  },
  {
    "Name": "IDENT",
    "Start": 1819,
    "End": 1830,
    "Text": "occur_index"
  },
  {
    "Name": "INTEGER",
    "Start": 1831,
    "End": 1838,
    "Text": "integer"
  },
  {
    "Name": "ASCII_41",
    "Start": 1838,
    "End": 1839,
    "Text": ")"
  },
  {
    "Name": "RETURNS",
    "Start": 1840,
    "End": 1847,
    "Text": "RETURNS"
  },
  {
    "Name": "INTEGER",
    "Start": 1848,
    "End": 1855,
    "Text": "integer"
  },
  {
    "Name": "AS",
    "Start": 1856,
    "End": 1858,
    "Text": "AS"
  },
  {
    "Name": "SCONST",
    "Start": 1859,
    "End": 3144,
    "Text": "$$\nDECLARE\n    pos integer NOT NULL DEFAULT 0;\n    occur_number integer NOT NULL DEFAULT 0;\n    temp_str varchar;\n    beg integer;\n    i integer;\n    length integer;\n    ss_length integer;\nBEGIN\n    IF occur_index \u003c= 0 THEN\n        RAISE 'argument ''%'' is out of range', occur_index\n          USING ERRCODE = '22003';\n    END IF;\n\n    IF beg_index \u003e 0 THEN\n        beg := beg_index - 1;\n        FOR i IN 1..occur_index LOOP\n            temp_str := substring(string FROM beg + 1);\n            pos := position(string_to_search_for IN temp_str);\n            IF pos = 0 THEN\n                RETURN 0;\n            END IF;\n            beg := beg + pos;\n        END LOOP;\n\n        RETURN beg;\n    ELSIF beg_index \u003c 0 THEN\n        ss_length := char_length(string_to_search_for);\n        length := char_length(string);\n        beg := length + 1 + beg_index;\n\n        WHILE beg \u003e 0 LOOP\n            temp_str := substring(string FROM beg FOR ss_length);\n            IF string_to_search_for = temp_str THEN\n                occur_number := occur_number + 1;\n                IF occur_number = occur_index THEN\n                    RETURN beg;\n                END IF;\n            END IF;\n\n            beg := beg - 1;\n        END LOOP;\n\n        RETURN 0;\n    ELSE\n        RETURN 0;\n    END IF;\nEND;\n$$"
  },
  {
    "Name": "LANGUAGE",
    "Start": 3145,
    "End": 3153,
    "Text": "LANGUAGE"
  },
  {
    "Name": "IDENT",
    "Start": 3154,
    "End": 3161,
    "Text": "plpgsql"
  },
  {
    "Name": "STRICT_P",
    "Start": 3162,
    "End": 3168,
    "Text": "STRICT"
  },
  {
    "Name": "IMMUTABLE",
    "Start": 3169,
    "End": 3178,
    "Text": "IMMUTABLE"
  },
  {
    "Name": "ASCII_59",
    "Start": 3178,
    "End": 3179,
    "Text": ";"
  }
]