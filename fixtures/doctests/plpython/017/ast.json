{
  "stmts": [
    {
      "stmt": {
        "CreateFunctionStmt": {
          "funcname": [
            {
              "String": {
                "str": "greet"
              }
            }
          ],
          "options": [
            {
              "DefElem": {
                "arg": {
                  "List": {
                    "items": [
                      {
                        "String": {
                          "str": "\n  # return tuple containing lists as composite types\n  # all other combinations work also\n  return ( [ how, \"World\" ], [ how, \"PostgreSQL\" ], [ how, \"PL/Python\" ] )\n"
                        }
                      }
                    ]
                  }
                },
                "defaction": "DEFELEM_UNSPEC",
                "defname": "as",
                "location": 58
              }
            },
            {
              "DefElem": {
                "arg": {
                  "String": {
                    "str": "plpythonu"
                  }
                },
                "defaction": "DEFELEM_UNSPEC",
                "defname": "language",
                "location": 232
              }
            }
          ],
          "parameters": [
            {
              "FunctionParameter": {
                "argType": {
                  "location": 27,
                  "names": [
                    {
                      "String": {
                        "str": "text"
                      }
                    }
                  ],
                  "typemod": -1
                },
                "mode": "FUNC_PARAM_IN",
                "name": "how"
              }
            }
          ],
          "returnType": {
            "location": 49,
            "names": [
              {
                "String": {
                  "str": "greeting"
                }
              }
            ],
            "setof": true,
            "typemod": -1
          }
        }
      },
      "stmt_len": 250
    }
  ],
  "version": 130003
}